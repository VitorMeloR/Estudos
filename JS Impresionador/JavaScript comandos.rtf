{\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Segoe UI Black;}{\f1\fnil\fcharset0 MS PGothic;}{\f2\fnil\fcharset0 Arial Black;}{\f3\fnil\fcharset255 Arial Black;}{\f4\fnil\fcharset0 Arial;}{\f5\fnil\fcharset2 Symbol;}}
{\colortbl ;\red255\green255\blue255;\red255\green255\blue0;\red0\green0\blue0;\red255\green217\blue0;\red255\green192\blue0;\red247\green150\blue70;\red51\green51\blue51;\red128\green100\blue162;\red79\green129\blue189;\red0\green176\blue80;\red209\green144\blue73;\red192\green80\blue77;\red0\green77\blue187;\red255\green0\blue0;\red243\green164\blue71;\red155\green187\blue89;\red155\green0\blue211;\red75\green172\blue198;\red100\green107\blue134;\red221\green132\blue132;\red209\green99\blue73;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\cf1\highlight2\b\f0\fs56\lang22  \cf3 JS\cf1  \cf4\highlight0\i  \cf5\f1 comandos\par
\cf4\f2\par

\pard\sa200\sl276\slmult1\cf1\highlight2\i0\f0  \cf3 JS\cf1  \cf4\highlight0\i  \cf5\f3\fs40\lang1033 Primeiro codigo:\f2\lang22\par
\cf6\b0\i0\f4\fs28 Escrever na tela:\cf7  para escrever algo no prompt de comando(tela) use o seguinte codigo:\par
\tab\cf8 console\cf7 .\cf9 log\cf10 ("sua mensagem")\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8\fs24 fun\'e7\'e3o console, d\'e1 acesso ao console do pc ou sevidor\par
{\pntext\f5\'B7\tab}\cf9 met\'f3do que imprime uma mensagem no console\par
{\pntext\f5\'B7\tab}\cf10 parametro com o valor da mensagem\par

\pard\sa200\sl276\slmult1\cf7\fs28 O texto deve estar em aspas, seja simples ou dupla\par
\par
\cf1\highlight2\b\f0\fs56  \cf3 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Variaveis e Constantes\cf11 :\f0\par
\cf6\b0\i0\f4\fs28 variavel\cf7 : variavel \'e9 um espa\'e7o onde uma informa\'e7\'e3o passada ser\'e1 guardada.\b\i\f0\fs40\par
\cf6\b0\i0\f4\fs28 const: \cf7 usada para criar variaveis que ser\'e3o constante, ou seja, que seu valor n\'e3o ser\'e1 atualizado. Siga o exemplo da sintaxe:\par
\cf6\tab\cf8 const\cf6  \cf12 mensagemTela\cf6  \cf7 = \cf10 'Ol\'e1 mundo!'\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8\fs24 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par

\pard\sa200\sl276\slmult1\cf6\fs28 let: \cf7 Ao contrario do const o let \'e9 usado para criar uma variavel quando valor ser\'e1 autoalizado constantemente. Siga o exemplo da sintaxe:\par
\cf6\tab\cf8 let\cf6  \cf12 mensagemTela\cf6  \cf7 = \cf10 'Ol\'e1 mundo!'\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8\fs24 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par

\pard\sa200\sl276\slmult1\cf3\highlight2\b\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 operadores aritimeticos:\par
\cf7\b0\i0\f4\fs28 Em JavaScript podemos fazer diversos tipos de opera\'e7\'f5es aritimeticas, para fazer essas opera\'e7\'f5es usamos os siguintes simbolos:\par
\cf6 Somar ( + ): \cf7 Para fazer uma opera\'e7\'e3o de adi\'e7\'e3o usamos o '+'. Veja:\tab\cf8 const\cf7  \cf12 opera\'e7\'e3o\cf7  = \cf10 5 \cf13 +\cf14  \cf10 4\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par
{\pntext\f5\'B7\tab}\cf13 tipo de operador\par

\pard\sa200\sl276\slmult1\cf6\fs28 Subtrair ( - ): \cf7 Para fazer uma opera\'e7\'e3o de subtra\'e7\'e3o usamos o '-'. Veja:\par
\tab\cf8 const\cf7  \cf12 opera\'e7\'e3o \cf7 = \cf10 9 \cf13 -\cf14  \cf10 10\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par
{\pntext\f5\'B7\tab}\cf13 tipo de operador\par

\pard\sa200\sl276\slmult1\cf6\fs28 Multiplicar ( * ): \cf7 Para fazer uma opera\'e7\'e3o de mulpica\'e7\'e3o usamos o ' * '. Veja:\par
\cf8\tab const\cf7  \cf12 opera\'e7\'e3o \cf7 = \cf10 9 \cf13 *\cf14  \cf10 9\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par
{\pntext\f5\'B7\tab}\cf13 tipo de operador\par

\pard\sa200\sl276\slmult1\cf6\fs28 Dividir ( / ): \cf7 Para fazer uma opera\'e7\'e3o de divis\'e3o usamos o ' / '. Veja:\tab\par

\pard\li720\sa200\sl276\slmult1\cf8 const\cf7  \cf12 opera\'e7\'e3o \cf7 = \cf10 9 \cf13 /\cf14  \cf10 3\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par
{\pntext\f5\'B7\tab}\cf13 tipo de operador\par

\pard\sa200\sl276\slmult1\cf6\fs28\par
Potencia ( ** ): \cf7 Para fazer uma opera\'e7\'e3o de exponencia\'e7\'e3o usamos o ' ** '. Veja:\par
\cf8\tab const\cf7  \cf12 opera\'e7\'e3o \cf7 = \cf10 2 \cf13 **\cf14  \cf10 10\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par
{\pntext\f5\'B7\tab}\cf13 tipo de operador\par

\pard\sa200\sl276\slmult1\cf7\fs28\tab\par
\cf6 Resto da divis\'e3o ( % ): \cf7 Para fazer uma opera\'e7\'e3o de modulus usamos o ' % '. Veja:\tab\par
\cf8\tab const\cf7  \cf12 opera\'e7\'e3o \cf7 = \cf10 2 \cf13 %\cf14  \cf10 8\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par
{\pntext\f5\'B7\tab}\cf13 tipo de operador\par

\pard\sa200\sl276\slmult1\cf7\fs28\par
\cf6 Incremento ( ++ ): \cf7 Para fazer uma opera\'e7\'e3o de incrementa\'e7\'e3o usamos o ' ++ '. Veja:\tab\par
\cf8\tab const\cf7  \cf12 opera\'e7\'e3o \cf7 = \cf10 5++\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par
{\pntext\f5\'B7\tab}\cf13 tipo de operador\par

\pard\sa200\sl276\slmult1\cf7\fs28\par
\cf6 Decremento ( -- ): \cf7 Para fazer uma opera\'e7\'e3o de decrementa\'e7\'e3o usamos o ' -- '. Veja:\tab\cf8\tab\par
\tab const\cf7  \cf12 opera\'e7\'e3o \cf7 = \cf10 6--\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par
{\pntext\f5\'B7\tab}\cf13 tipo de operador\par

\pard\sa200\sl276\slmult1\cf3\highlight2\b\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Tipos de dados:\par
\cf7\b0\i0\f4\fs28 Os tipos de dados que podemos usar em uma variavel podem ser:\par
String: O tipo de dado String \'e9 tudo aquilo que est[a dentro de aspas, seja simples ou dupla. Veja:\par
\cf8\tab const\cf7  \cf12 string \cf7 = \cf10 'Ol\'e1 mundo!'\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par

\pard\sa200\sl276\slmult1\cf7\fs28 Number: O tipo de dado Number \'e9 todos os dados numericos. Veja:\par
\cf8\tab const\cf7  \cf12 number \cf7 = \cf10 90\fs24\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1\cf8 tipo da variavel\par
{\pntext\f5\'B7\tab}\cf12 nome da variavel\par
{\pntext\f5\'B7\tab}\cf10 valor da variavel\par

\pard\sa200\sl276\slmult1\cf3\highlight2\b\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Booleans:\cf10\b0\i0\f4\fs24\par
\cf7\fs28 tipos booleanos: tipos boleeanos s\'f3 aceitma dos valors, True ou False.\par
comparadores: camparadores serve para verificar se \'e9 true ou false. veja os comparadores:\par
\cf6 &&:\cf7  serve para comparar 'and' ou seja se uma conidi\'e7\'e3o \'e9 verdadeira e a outra tamb\'e9m\par

\pard\li720\sa200\sl276\slmult1 Exemplo: \cf15 console\cf7 .\cf9 log\cf7 (\cf10 `$\{\cf8 true \cf7 && \cf12 true\cf10 `\}\cf7 )\cf12\par

\pard\sa200\sl276\slmult1\tab\cf7 Resultado: false\cf12\par
\cf7\par
\cf6 ||:\cf7  serve para comparar 'or' ou seja se uma condi\'e7\'e3o ou outra \'e9 verdadeira\par

\pard\li720\sa200\sl276\slmult1 Exemplo: \cf15 console\cf7 .\cf9 log\cf7 (\cf10 `$\{\cf8 true \cf7 || \cf12 false\cf10 `\}\cf7 )\cf12\par

\pard\sa200\sl276\slmult1\tab\cf7 Resultado: true\cf12\par
\cf7\par
\cf6 !|:\cf7  Esse \'e9 um operador aplicado a um valor booleano quando queremos o seu inverso \par

\pard\li720\sa200\sl276\slmult1 Exemplo: \cf15 console\cf7 .\cf9 log\cf7 (\cf10 `$\{\cf8 true \cf7 !| \cf12 true\cf10 `\}\cf7 )\cf12\par

\pard\sa200\sl276\slmult1\tab\cf7 Resultado: true\cf12\par
\cf10\fs24\par
\cf3\highlight2\b\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Comparadores:\cf7\b0\i0\f4\fs28\par
\cf6 Igual (==): \cf7 Verifica se dois valores s\'e3o iguais.\par
\tab Exemplo: \cf15 console\cf7 .\cf9 log\cf7 (\cf10 `$\{\cf8 10 \cf7 == \cf12 '10'\cf10 `\}\cf7 )\cf12\par
\tab\cf7 Resultado: True\cf12\par
\tab\cf7\par
\cf6 Estritamente Igual (===): \cf7 Verifica se dois valores s\'e3o iguais e do mesmo tipo.\par
\tab Exemplo: \cf15 console\cf7 .\cf9 log\cf7 (\cf10 `$\{\cf8 10 \cf7 === \cf12 10\cf10 `\}\cf7 )\cf12\par
\tab\cf7 Resultado: True\cf12\par
\cf7\par
\cf6 Diferente (!=): \cf7 Verifica se dois valores n\'e3o s\'e3o iguais.\par
\tab Exemplo: \cf15 console\cf7 .\cf9 log\cf7 (\cf10 `$\{\cf8 10 \cf7 != '\cf12 12'\cf10 `\}\cf7 )\cf12\par
\tab\cf7 Resultado: True\cf12\par
\cf7\par
\cf6 Estritamente Diferente (!==): \cf7 Verifica se dois valores n\'e3o s\'e3o iguais ou n\'e3o do mesmo tipo.\par
\tab Exemplo: \cf15 console\cf7 .\cf9 log\cf7 (\cf10 `$\{\cf8 10 \cf7 !== \cf12 11\cf10 `\}\cf7 )\cf12\par
\tab\cf7 Resultado: True\cf12\par
\cf7\par
\cf6 Maior que (>): \cf7 Verifica se o valor \'e0 esquerda \'e9 maior que o valor \'e0 direita.\par
\tab Exemplo: \cf15 console\cf7 .\cf9 log\cf7 (\cf10 `$\{\cf8 11 \cf7 > \cf12 10\cf10 `\}\cf7 )\cf12\par
\tab\cf7 Resultado: True\par
\cf6 Maior ou igual a (>=): \cf7 Verifica se o valor \'e0 esquerda \'e9 maior ou igual ao valor \'e0 direita.\par
\tab Exemplo: \cf15 console\cf7 .\cf9 log\cf7 (\cf10 `$\{\cf8 11 \cf7 >= \cf12 11\cf10 `\}\cf7 )\cf12\par
\tab\cf7 Resultado: True\par
\cf6 Menor que (<): \cf7 Verifica se o valor \'e0 esquerda \'e9 menor que o valor \'e0 direita.\par
\tab Exemplo: \cf15 console\cf7 .\cf9 log\cf7 (\cf10 `$\{\cf8 10 \cf7 < \cf12 11\cf10 `\}\cf7 )\cf12\par
\tab\cf7 Resultado: True\par
\cf6 Menor ou igual a (<=): \cf7 Verifica se o valor \'e0 esquerda \'e9 menor ou igual ao valor \'e0 direita.\par
\tab Exemplo: \cf15 console\cf7 .\cf9 log\cf7 (\cf10 `$\{\cf8 10 \cf7 <= \cf12 11\cf10 `\}\cf7 )\cf12\par
\tab\cf7 Resultado: True \cf13\fs24\par
\cf3\highlight2\b\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Typeof:\par
\cf7\b0\i0\f4\fs28 Typeof serve para verificar o tipo da variavel. Veja:\par
\tab\cf8 const\cf7  \cf12 dado \cf7 = \cf10 'Ol\'e1 mundo!'\cf7\par
\cf15\tab console\cf7 .\cf9 log\cf7 (\cf13 typeof string\cf7 )\par
\tab Resultado: string \par
\cf3\highlight2\b\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 toFixed:\cf12\b0\i0\f4\fs28\par
\cf7 toFixed serve para delimitar a quantidade de numeros flutuantes que ir\'e1 aparecer. Veja:\par
\cf8 const\cf7  \cf12 numeroFlutante \cf7 = \cf10 15.7777\par
\cf15 console\cf7 .\cf9 log\cf7 (\cf16 `Delimitando o float: \cf17 $\{\cf12 numeroFlutuant\cf18 .toFixed(1)\cf17\}\cf16 `\cf7 )\par
Resultado: 16.7 \par
\cf3\highlight2\b\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Object:\cf7\b0\i0\f4\fs28\par
Em JavaScript, um objeto (Object) \'e9 uma estrutura de dados que permite armazenar e organizar valores. Os objetos s\'e3o cole\'e7\'f5es de pares chave-valor, onde cada chave (tamb\'e9m chamada de propriedade) est\'e1 associada a um valor. Os valores podem ser de qualquer tipo de dado, incluindo n\'fameros, strings, booleanos, fun\'e7\'f5es e at\'e9 mesmo outros objetos.\par
\cf6 Criando um Objeto: \cf7 Voc\'ea pode criar um objeto usando a sintaxe de chaves \{\}. As propriedades e valores s\'e3o especificados dentro das chaves, separados por v\'edrgulas. Veja:\par
\tab\cf18 let\cf7  \cf12 meusDados\cf7  = \{ \par
\tab\tab\cf17 nome\cf7 : \cf16 "Vitor"\cf7 ,\par
\tab\tab\cf17 idade\cf7 : \cf16 19\cf7 ,\par
\tab\tab\cf17 cpf\cf7 : \cf16 "111-222-333-444-20"\cf7 ,\par
\tab\tab\cf17 brasileiro\cf7 : \cf16 true\cf7  \}\par
\cf6 Acessando Propriedades: \cf7 Voc\'ea pode acessar as propriedades de um objeto usando a nota\'e7\'e3o de ponto ou a nota\'e7\'e3o de colchetes. veja:\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\cf19 nota\'e7\'e3o de ponto:\par

\pard\sa200\sl276\slmult1\cf7\tab\tab\cf15 console\cf7 .\cf9 log\cf7 (\cf12 meusDados\cf7 .\cf17 nome\cf7 ) \par
\tab\tab Resultado: Vitor\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\cf19 nota\'e7\'e3o de colchetes:\par

\pard\sa200\sl276\slmult1\cf7\tab\tab\cf15 console\cf7 .\cf9 log\cf7 (\cf12 meusDados\cf7 .[\cf16 "nome"\cf7 ]) \par
\tab\tab Resultado: Vitor\par
\cf6 Modificando Propriedades: \cf7 Voc\'ea pode modificar o valor de uma propriedade atribuindo um novo valor. veja\par
 \tab\cf12 meusDados\cf7 .\cf17 idade\cf7  = \cf16 26\cf7\par
\tab\cf15 console\cf7 .\cf9 log\cf7 (\cf12 meusDados\cf7 .\cf17 idade\cf7 )\par
\tab Resultado: 26\par
\cf6 Adicionando Propriedades: \cf7 Voc\'ea pode adicionar novas propriedades a um objeto a qualquer momento.\par
\tab\cf12 meusDados\cf7 .\cf17 cidade\cf7  = \cf16 "Rio de janeiro"\par
\cf7\tab\cf15 console\cf7 .\cf9 log\cf7 (\cf12 meusDados\cf7 .\cf17 cidade\cf7  )\par
\tab Resultado: Rio de janeiro \par
\cf3\highlight2\b\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Array:\cf7\b0\i0\f4\fs28\par
Em JavaScript, uma array \'e9 uma estrutura de dados que permite armazenar m\'faltiplos valores em uma \'fanica vari\'e1vel. As arrays s\'e3o objetos especiais, com m\'e9todos integrados para realizar opera\'e7\'f5es de itera\'e7\'e3o e manipula\'e7\'e3o de dados. Aqui est\'e3o alguns conceitos e opera\'e7\'f5es comuns relacionados a arrays:\par
\cf6 Criando uma Array: \cf7 Voc\'ea pode criar uma array usando a sintaxe de colchetes []. Os elementos s\'e3o separados por v\'edrgulas. Veja:\par
\tab\cf9 let\cf7  \cf12 frutas\cf7  = [ \cf16 "Ma\'e7\'e3"\cf7 ,\cf16  "Banana"\cf7 ,\cf16  "Morango"\cf7 , \cf16 "Uva" \cf7 ];\par
\par
\cf6 Acessando Elementos: \cf7 Voc\'ea pode acessar elementos de uma array usando \'edndices. Os \'edndices come\'e7am do zero. Veja:\par
\tab\cf15 console\cf7 .\cf9 log\cf7 (\cf12 frutas\cf18 [0]\cf7 )\par
\tab Resultado: Ma\'e7\'e3\par
\par
\cf6 Modificando Elementos: \cf7 Voc\'ea pode modificar o valor de um elemento atribuindo um novo valor.Veja:\par
\tab\cf12 frutas\cf18 [1] \cf7 = \cf16 "Pera"\par
\cf7\tab\cf15 console\cf7 .\cf9 log\cf7 (\cf12 frutas\cf7 )\tab\par
\tab Resultado: ["Ma\'e7\'e3", "Pera", "Morango", "Uva"]\par
\par
\cf6 Adicionando Elementos: \cf7 Voc\'ea pode adicionar elementos ao final de uma array usando o m\'e9todo push(). Veja:\par
\tab\cf12 frutas\cf7 .\cf9 push\cf7 (\cf16 "Abacaxi"\cf7 )\par
\tab\cf15 console\cf7 .\cf9 log\cf7 (\cf12 frutas\cf7 ) \par
\tab Resultado: ["Ma\'e7\'e3", "Pera", "Morango", "Uva", "Abacaxi"]\par
\par
\cf6 Removendo Elementos: \cf7 Voc\'ea pode remover o \'faltimo elemento de uma array usando o m\'e9todo pop(). Veja:\par
\tab\cf12 frutas\cf7 .\cf9 pop\cf7 ()\par
\tab\cf15 console\cf7 .\cf9 log\cf7 (\cf12 frutas\cf7 ) \par
\tab Resultado: ["Ma\'e7\'e3", "Pera", "Morango", "Uva"]\par
\par
\cf6 Tamanho da A\cf15 r\cf6 ray: \cf7 Voc\'ea pode obter o n\'famero de elementos em uma array usando a propriedade length. Veja:\par
 \tab\cf15 console\cf7 .\cf9 log\cf7 (\cf12 frutas\cf7 .\cf18 length\cf7 )\par
\tab Resultado: 4 \par
\cf3\highlight2\b\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Function:\par
\cf15\b0\i0\f4\fs28 Fun\'e7\'e3o (Function): \cf7 Uma fun\'e7\'e3o \'e9 um bloco de c\'f3digo que realiza uma tarefa espec\'edfica. Elas s\'e3o definidas usando a palavra-chave function, seguida pelo nome da fun\'e7\'e3o e, opcionalmente, uma lista de par\'e2metros entre par\'eanteses. Aqui est\'e1 um exemplo simples de uma fun\'e7\'e3o que soma dois n\'fameros:\par
 \tab\tab\cf9 function \cf12 soma\cf7 (\cf5 a\cf7 , \cf5 b\cf7 ) \{\par
\tab\tab\tab\cf9 const\cf7  \cf20 resultado\cf15  \cf7 =\cf15  \cf5 a\cf7  + \cf5 b\par
\tab\tab\tab\cf9 return\cf5  \cf20 resultado\cf7\par
\tab\tab\};\par
\tab\tab\cf9 const\cf7  \cf21 resposta\cf7  = \cf12 soma\cf7 (\cf6 5\cf7 +\cf6 6\cf7 );\par
\tab\tab\cf15 console\cf7 .\cf9 log\cf7 (\cf21 resposta\cf7 )\par
\tab\tab Resultado: 11\par
\cf13\fs24\par
\cf15\fs28 Argumentos: \cf7 Os argumentos s\'e3o os valores fornecidos \'e0 fun\'e7\'e3o quando ela \'e9 chamada. No exemplo acima, a e b s\'e3o os argumentos da fun\'e7\'e3o soma. Esses valores podem ser usados dentro da fun\'e7\'e3o para realizar opera\'e7\'f5es.\par
\cf15 Par\'e2metros: \cf7 Par\'e2metros s\'e3o valores que podem ser passados para uma fun\'e7\'e3o quando ela \'e9 chamada. Eles s\'e3o usados pela fun\'e7\'e3o durante sua execu\'e7\'e3o. Os par\'e2metros s\'e3o definidos na declara\'e7\'e3o da fun\'e7\'e3o, entre par\'eanteses. no exemplo acima, os par\'e2metros s\'e3o 5 para o argumento A e 6 para o argumento B. \par
\cf15 Return: \cf7 A palavra-chave return \'e9 usada em uma fun\'e7\'e3o para retornar um valor. Quando a fun\'e7\'e3o \'e9 chamada, o c\'f3digo dentro dela \'e9 executado e, se houver uma instru\'e7\'e3o return, o valor especificado \'e9 retornado, como vimos no exemplo acima, o return retorna o resultado da soma e esse retorno \'e9 atribuido \'e0 variavel resposta. O return tamb\'e9m interrompe a execu\'e7\'e3o da fun\'e7\'e3o, ent\'e3o qualquer c\'f3digo ap\'f3s um return n\'e3o ser\'e1 executado. \cf10\par
\cf3\highlight2\b\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Escopos:\par
\cf7\b0\i0\f4\fs28 Escopos: O escopo em JavaScript refere-se \'e0 acessibilidade de vari\'e1veis, fun\'e7\'f5es e objetos em diferentes partes do c\'f3digo. Em JavaScript, existem dois principais escopos:\cf10\ul\b\i\f0\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\cf15\ulnone\b0\i0\f4 Escopo Global: \cf7 Vari\'e1veis e fun\'e7\'f5es declaradas fora de qualquer fun\'e7\'e3o t\'eam escopo global e podem ser acessadas de qualquer lugar do c\'f3digo.\par
{\pntext\f5\'B7\tab}\cf6 Escopo Local: \cf7 Vari\'e1veis declaradas dentro de uma fun\'e7\'e3o t\'eam escopo local e s\'f3 podem ser acessadas dentro dessa fun\'e7\'e3o.\par
{\pntext\f5\'B7\tab}Al\'e9m disso, o JavaScript tamb\'e9m tem o conceito de escopo de bloco, introduzido com a palavra-chave let e const. Vari\'e1veis declaradas com let e const t\'eam escopo de bloco, o que significa que elas s\'f3 s\'e3o acess\'edveis dentro do bloco em que foram declaradas.\par

\pard\sa200\sl276\slmult1\cf3\highlight2\b\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Metodos:\par
\par
\par
\cf3\highlight2\i0\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Condicionais:\par
\par
\par
\cf3\highlight2\i0\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 La\'e7os de repeti\'e7\'f5es:\par
\par
\par
\cf3\highlight2\i0\f0\fs56 JS\cf1  \cf4\highlight0\i  \cf5\f2\fs40 Recursividade:\cf7\b0\i0\f4\fs28\par
}
 